<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>是叶耶耶</title>
  
  <subtitle>欢迎来到我的世界</subtitle>
  <link href="https://github.com/yeye0307/yeye0307.github.io.git/atom.xml" rel="self"/>
  
  <link href="https://github.com/yeye0307/yeye0307.github.io.git/"/>
  <updated>2023-03-24T11:50:15.829Z</updated>
  <id>https://github.com/yeye0307/yeye0307.github.io.git/</id>
  
  <author>
    <name>叶耶耶</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>递归与递推</title>
    <link href="https://github.com/yeye0307/yeye0307.github.io.git/2023/03/24/%E9%80%92%E5%BD%92%E4%B8%8E%E9%80%92%E6%8E%A8/"/>
    <id>https://github.com/yeye0307/yeye0307.github.io.git/2023/03/24/%E9%80%92%E5%BD%92%E4%B8%8E%E9%80%92%E6%8E%A8/</id>
    <published>2023-03-24T08:13:49.566Z</published>
    <updated>2023-03-24T11:50:15.829Z</updated>
    
    <content type="html"><![CDATA[<p><a href="#递归"><font size=2 color=#000>递归</font></a><br><a href="#1.递归实现指数型枚举"><font size=2 color=#000> 1.递归实现指数型枚举</font></a><br><a href="#2.递归实现排列型枚举"><font size=2 color=#000> 2.递归实现排列型枚举</font></a></p><p><a href="#递推"><font size=2 color=#000>递推</font></a></p><hr><center><a id="递归"><font size=5>递归</font></a></center><a id="1.递归实现指数型枚举">1.递归实现指数型枚举</a><p>从 1∼n这 n个整数中随机选取任意多个，输出所有可能的选择方案。<br><strong>输入格式</strong><br>输入一个整数 n<br><strong>输出格式</strong><br>每行输出一种方案。<br>同一行内的数必须升序排列，相邻两个数用恰好 1 个空格隔开。<br>对于没有选任何数的方案，输出空行。<br><strong>数据范围</strong><br>1≤n≤15<br><strong>输入样例：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3</span><br><span class="line">2</span><br><span class="line">2 3</span><br><span class="line">1</span><br><span class="line">1 3</span><br><span class="line">1 2</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="comment">// u是当前枚举到的数，state是二进制数记录哪些数被选</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> state)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (u == n) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++)</span><br><span class="line">            <span class="keyword">if</span> (state &gt;&gt; i &amp; <span class="number">1</span>) <span class="comment">//state的第i位的状态为1则输出</span></span><br><span class="line">                <span class="comment">//如011，1是第0位</span></span><br><span class="line">                <span class="comment">//输出1 2</span></span><br><span class="line">                cout &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            cout &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span> (u + <span class="number">1</span>, state);  <span class="comment">// 不用u这个数</span></span><br><span class="line">    <span class="built_in">dfs</span> (u + <span class="number">1</span>, state | (<span class="number">1</span> &lt;&lt; u)); <span class="comment">// 用u这个数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>题解：</p><p>状态压缩递归(yxc)</p><blockquote><p>左移右移的优先级高于与或运算</p><p>每个数都存在选中和不被选中两种情况，所以结果是2^n个</p><p>state保存的状态次序（只有一位和两位的状态在前面补0便于理解）：</p><p>000 100 010 110 001 101 011 111</p></blockquote><p>自己用mermaid画了个流程图:   <font size=2 color=#AAF>(这个用代码画还挺方便的，两分钟画一个)</font></p><p><img src="/images/mermaid1.png" alt="mermaid1"></p><hr><p><a id="2.递归实现排列型枚举">2.递归实现排列型枚举</a></p><p>把 1∼n这 n个整数排成一行后随机打乱顺序，输出所有可能的次序。<br><strong>输入格式</strong><br>输入一个整数 n<br><strong>输出格式</strong></p><p>按照从小到大的顺序输出所有方案，每行 11 个。</p><p>首先，同一行相邻两个数用一个空格隔开。</p><p>其次，对于两个不同的行，对应下标的数一一比较，字典序较小的排在前面。</p><p><strong>数据范围</strong><br>1≤n≤9<br><strong>输入样例：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">1 3 2</span><br><span class="line">2 1 3</span><br><span class="line">2 3 1</span><br><span class="line">3 1 2</span><br><span class="line">3 2 1</span><br></pre></td></tr></table></figure><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> ans[<span class="number">10</span>];<span class="comment">//储存输出的数组</span></span><br><span class="line"><span class="type">int</span> state[<span class="number">10</span>];<span class="comment">//判断该数字有没有使用</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span>&#123;</span><br><span class="line">    <span class="comment">//到达边界</span></span><br><span class="line">    <span class="keyword">if</span>(u &gt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//没到达边界</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//如果该数字没有被使用</span></span><br><span class="line">        <span class="keyword">if</span>(state[i] == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans[u] = i;</span><br><span class="line">            state[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//前进</span></span><br><span class="line">            <span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line">            <span class="comment">//回溯</span></span><br><span class="line">            state[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>用state记录数字使用状态，很经典的递归回溯</p><p><img src="https://cdn.acwing.com/media/article/image/2021/02/20/55289_0cd4222d73-%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86.png" alt="图片源自acwingHasity"></p><p>（图片源自acwing）</p></blockquote><hr><center><a id="递推"><font size=5>递推</font></a></center>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;#递归&quot;&gt;&lt;font size=2 color=#000&gt;递归&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;#1.递归实现指数型枚举&quot;&gt;&lt;font size=2 color=#000&gt; 1.递归实现指数型枚举&lt;/font&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=</summary>
      
    
    
    
    <category term="Study" scheme="https://github.com/yeye0307/yeye0307.github.io.git/categories/Study/"/>
    
    
    <category term="算法" scheme="https://github.com/yeye0307/yeye0307.github.io.git/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>markdown的使用说明</title>
    <link href="https://github.com/yeye0307/yeye0307.github.io.git/2023/03/21/Typora/"/>
    <id>https://github.com/yeye0307/yeye0307.github.io.git/2023/03/21/Typora/</id>
    <published>2023-03-21T09:42:20.780Z</published>
    <updated>2023-03-22T11:23:50.537Z</updated>
    
    <content type="html"><![CDATA[<h6 id="跳转到：基础语法"><a href="#跳转到：基础语法" class="headerlink" title="跳转到：基础语法"></a>跳转到：<a href="#基础语法"><font size=3 color=#0f6578>基础语法</font></a></h6><hr><blockquote><p>这里用来记录写博客时用到的一些好用的markdown语法</p></blockquote><ol><li><p>文内锚点链接跳转</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#基础语法&quot;&gt;&lt;font size=3 color=#0f6578&gt;基础语法&lt;/font&gt;&lt;/a&gt;</span><br><span class="line">&lt;a id=&quot;基础语法&quot;&gt;基础语法&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>效果：</p><p><a href="#基础语法"><font size=2 color=#0f6578>基础语法</font></a></p><p>即可跳转到下文基础语法（原理就是通过id值跳转啦）</p><hr></li><li><p>未完待续</p><hr></li></ol><h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a><a id="基础语法">基础语法</a></h1><h2 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h2><p>语法：# (一级标题)  ## (二级标题)  ### (三级标题) ……</p><p>代码：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br></pre></td></tr></table></figure><p>效果:  </p><h1 id="我是一级标题"><a href="#我是一级标题" class="headerlink" title="我是一级标题"></a>我是一级标题</h1><h2 id="我是二级标题"><a href="#我是二级标题" class="headerlink" title="我是二级标题"></a>我是二级标题</h2><p>快捷键:</p><ul><li>Ctrl+数字1~6可以快速将选中的文本调成对应级别的标题</li><li>Ctrl+0可以快速将选中的文本调成普通文本</li><li>Ctrl+加号&#x2F;减号对标题级别进行加减</li></ul><h2 id="二、段落"><a href="#二、段落" class="headerlink" title="二、段落"></a>二、段落</h2><h3 id="1、换行"><a href="#1、换行" class="headerlink" title="1、换行"></a>1、换行</h3><p>代码:  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">这是一个段落</span><br><span class="line">这是一个段落</span><br></pre></td></tr></table></figure><p>效果: </p><p>这是一个段落<br>这是一个段落</p><h3 id="2、分割线"><a href="#2、分割线" class="headerlink" title="2、分割线"></a>2、分割线</h3><p>语法:  —或者***+回车</p><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">---或者***</span><br></pre></td></tr></table></figure><p>效果:</p><hr><h2 id="三、文字显示"><a href="#三、文字显示" class="headerlink" title="三、文字显示"></a>三、文字显示</h2><h3 id="1、字体"><a href="#1、字体" class="headerlink" title="1、字体"></a>1、字体</h3><p>语法:</p><ul><li>粗体:  用一对双星号包裹</li><li>删除线:  用一对双飘号包裹</li><li>下划线:  用一对u标签包裹</li><li>斜体:  用一对单星号包裹</li><li>高亮:  用一对双等号包裹</li></ul><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">**这是粗体**</span><br><span class="line">~~这是删除线~~</span><br><span class="line">&lt;u&gt;这是下划线&lt;/u&gt;</span><br><span class="line">*这是斜体*</span><br><span class="line">==这是高亮==</span><br></pre></td></tr></table></figure><p>效果:<br><strong>这是粗体</strong><br><del>这是删除线</del><br><u>这是下划线</u><br><em>这是斜体</em></p><p>&#x3D;&#x3D;高亮&#x3D;&#x3D;</p><p>快捷键:</p><ul><li>加粗:  Ctrl+B</li><li>删除线:  Shift+Alt+5</li><li>下划线:  Ctrl+U</li><li>斜体:  Ctrl+I</li></ul><h2 id="四、列表"><a href="#四、列表" class="headerlink" title="四、列表"></a>四、列表</h2><h3 id="1、无序列表"><a href="#1、无序列表" class="headerlink" title="1、无序列表"></a>1、无序列表</h3><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*空格 或者是 -空格</span><br></pre></td></tr></table></figure><p>效果:<br>1.只有同一级别:</p><ul><li>苹果</li><li>香蕉</li><li>橘子</li></ul><p>2.子集类:</p><ul><li>一级分类<ul><li>二级分类<br>* 三级分类</li></ul></li></ul><p>快捷键:  Ctrl+Shift+]</p><h3 id="2、有序列表"><a href="#2、有序列表" class="headerlink" title="2、有序列表"></a>2、有序列表</h3><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数字+.+空格</span><br></pre></td></tr></table></figure><p>效果:</p><ol><li><p>第一个标题</p></li><li><p>第二个标题</p></li><li><p>第三个标题</p><ul><li>子内容1</li><li>子内容2</li></ul></li><li><p>第四个标题</p></li></ol><p>快捷键:  Ctrl+Shift+[</p><h3 id="3、任务列表"><a href="#3、任务列表" class="headerlink" title="3、任务列表"></a>3、任务列表</h3><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- [ ] 吃早餐</span><br><span class="line">- [x] 背单词</span><br></pre></td></tr></table></figure><p>效果:</p><ul><li><input disabled="" type="checkbox"> 吃早餐</li><li><input checked="" disabled="" type="checkbox"> 背单词</li></ul><h2 id="五、代码显示"><a href="#五、代码显示" class="headerlink" title="五、代码显示"></a>五、代码显示</h2><h3 id="1、行内代码"><a href="#1、行内代码" class="headerlink" title="1、行内代码"></a>1、行内代码</h3><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`int a=0;`（说明：`位于Esc下面）</span><br></pre></td></tr></table></figure><p>效果:<br><code>int a=0;</code></p><p>快捷键:  Ctrl+Shift+&#96;</p><h3 id="2、代码块"><a href="#2、代码块" class="headerlink" title="2、代码块"></a>2、代码块</h3><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">```js/java/c#/text</span><br><span class="line">内容</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p>快捷键:  Ctrl+Shift+K</p><h2 id="六、链接"><a href="#六、链接" class="headerlink" title="六、链接"></a>六、链接</h2><p>代码:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">www.baidu.com</span><br><span class="line">[百度一下](https://www.baidu.com)</span><br><span class="line">[百度一下](https://www.baidu.com &quot;https://www.baidu.com&quot;)</span><br></pre></td></tr></table></figure><p>效果:<br><a href="http://www.baidu.com/">www.baidu.com</a><br><a href="https://www.baidu.com/">百度一下</a><br><a href="https://www.baidu.com/" title="https://www.baidu.com">百度一下</a></p><p>快捷键:  Ctrl+K</p><blockquote></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h6 id=&quot;跳转到：基础语法&quot;&gt;&lt;a href=&quot;#跳转到：基础语法&quot; class=&quot;headerlink&quot; title=&quot;跳转到：基础语法&quot;&gt;&lt;/a&gt;跳转到：&lt;a href=&quot;#基础语法&quot;&gt;&lt;font size=3 color=#0f6578&gt;基础语法&lt;/font&gt;&lt;/a&gt;</summary>
      
    
    
    
    <category term="Study" scheme="https://github.com/yeye0307/yeye0307.github.io.git/categories/Study/"/>
    
    
    <category term="markdown" scheme="https://github.com/yeye0307/yeye0307.github.io.git/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://github.com/yeye0307/yeye0307.github.io.git/2023/03/20/hello-world/"/>
    <id>https://github.com/yeye0307/yeye0307.github.io.git/2023/03/20/hello-world/</id>
    <published>2023-03-19T18:55:32.764Z</published>
    <updated>2023-03-22T12:05:19.651Z</updated>
    
    <content type="html"><![CDATA[<p>“欢迎来到我的博客”</p><p>这里本应该用来写怎么搭建这个博客，太懒了先鸽着</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;“欢迎来到我的博客”&lt;/p&gt;
&lt;p&gt;这里本应该用来写怎么搭建这个博客，太懒了先鸽着&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quic</summary>
      
    
    
    
    <category term="Study" scheme="https://github.com/yeye0307/yeye0307.github.io.git/categories/Study/"/>
    
    
    <category term="blog" scheme="https://github.com/yeye0307/yeye0307.github.io.git/tags/blog/"/>
    
  </entry>
  
</feed>
